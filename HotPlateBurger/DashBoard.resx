<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4rvloaK1nQAAAABJRU5ErkJggg==
</value>
  </data>
</root>