<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABnWSURBVHhe7d1p
        rG1nQcbx25bWtrSMCoJUUBOlIIMBNCgYE6cgMwGMxmiiwagfKJShyDzYIrSAVaOCwgenKAkKgkZDBFqg
        JA6IoMYPTG2B0jK2Aq0Fqs8b2txy+x7OOXuv9b7v2uv3S/4JYeg97Lv22uecvZ+1jgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAfE5ID03np0vS
        lem69H86UNekD6Z/TC9ID0nHJQAY0inpnFRe8GsvbNq8/06/lk5KADCMJ6TLU+3FS9P1n+kHEwB0VX41
        /cJ0Q6q9YGn6ymP9zAQAXRyf/iLVXqQ0fy9NANDcean2wqR2/UoCgGbKe/5+7d+/69ODEgDM7uR0Waq9
        IKl9/5LK2zEAMKsy9au9EKlfP5MAYDblIj92/uN1UQKA2ZQr/NVegNS38nmM70oAMItXpNoLkPr39AQA
        s3hPqr34qH/l3gEAMIurUu3FR/3733R6AoDJlReZ2ouPxugxCQAm5xuAsXt1AoDJeQtg7MoFmgBgcj4E
        OH73TgAwqQtS7UVH42QOCMDkXAho/MwBAZicSwGPnzkgALNwM6DxMwcEYHLldsCXptoLj8bIHBCAWTw+
        lRvQ1F581D9zQABmc16qvfhojMwBAZjF8ekvU+3FR/17RgKAWRyXXpi8HTBe5oAAzK58JuDyVHshUp/M
        AQFo4pT0zOQ6AeNkDghAM+ViQeWKgeenS1L5huD6VHuB0ryZAwJAJ49NtRfnFpW3ZQCADsr78OX9+NoL
        dIvMAQGgk7el2otzi9wdEAA6KZv82otzi8wBAaCT7021F+cWlQ9g3jYBAB30vIGSOSAAdPKaVHtxbpE5
        IAB0Yg4IACtkDggAK2UOCAArZA4IACtkDggAK2UOCAArZA4IACtkDggAK2QOCAArZQ4IACtkDggAK2QO
        CAArZQ4IACtkDggAK2QOCAArZA4IACtlDggAK2QOCAArZA4IACtlDggAK2QOCAArZA4IACtkDggAK9Vz
        DihJWkfXpk+md6XfST+VvinRUc85oCRpvV2VXpSswjrpOQeUJKn8ZuCJiQ4uS7W/FEmSWvW76YREQ2WS
        V/vLkCSpZX+RfBPQUM85oCRJN+9ViUZ6zwElSbp5j080Yg4oSRql8sHA8sMpDZgDSpJG6rmJBswBJUkj
        VX4LcGKiAXNASdJIPSzRQM+7A0qSdGyvTDRQ7tFf+wuQJKlH5d4BNGAOKEkaqSsSjZgDSpJG6UuJRswB
        JUmjdF2iEXNASdIolXUaDZkDSpJG6J2JhswBJUkjdH6iIXNASdIIPSrRkDmgJKl35XXotERj5oCSpJ69
        NdGBOaAkqWdnJzowB5Qk9ezMRCeXptpfiiRJc2b/35k5oCSpR7+f6OixqfYXI0nSnJn/dWYOKElqnfnf
        IMwBJUktM/8bhDmgJKll5n+D6DkHLL8GKm9DANBO77d/zf8G0nMO+OgEQDuPS7XzcYvM/wbTcw74BwmA
        dv4w1c7HLTL/G0zPOeDlCYB2ev7W1/xvML3fD7p3AmB+90m183CLzP8G1XMO+PQEwPyemWrn4RaZ/w2q
        5xzwHxMA83t7qp2HW2T+NyhzQIDdZv7HnswBAXaX+R97MgcE2F3mf+zJHBBgd5n/sSdzQIDdZP7HvswB
        AXaP+R/7MgcE2D3mf+zLHBBgt5j/cWDmgAC7w/yPAzMHBNgd5n8cmDkgwO4w/+PAzAEBdoP5H4dmDgiw
        fOZ/HJo5IMDymf9xaOaAAMtm/sfGzAEBlsv8j42ZAwIsl/kfGzMHBFgu8z82Zg4IsEzmf2zNHBBgecz/
        2Jo5IMDymP+xNXNAgGUx/2My5oAAy2H+x2TMAQGWw/yPyZgDAiyH+R+TMQcEWAbzPyZnDggwPvM/JmcO
        CDA+8z8mZw4IMDbzP2ZjDggwLvM/ZmMOCDAu8z9mYw4IMC7zP2ZjDggwJvM/ZmcOCDAe8z9mZw4IMB7z
        P2ZnDggwFvM/mjEHBBiH+R/NmAMCjMP8j2bMAQHGYf5HM+aAAGMw/6M5c0CA/sz/aM4cEKA/8z+aMwcE
        6Os2yfyPLswBAfox/6Mbc0CAfsz/6MYcEKAf8z+6MQcE6MP8j+7MAQHaM/+jO3NAgPbM/+jOHBCgLfM/
        hmEOCNCO+R/DMAcEaMf8j2GYAwK0Y/7HMMwBAdow/2M45oAA8zP/YzjmgADzM/9jOOaAAPMy/2NY5oAA
        8zH/Y1jmgADzMf9jWD3ngL47BXad+R/DMgcEmIf5H8MzBwSYnvkfwzMHBJie+R/DMwcEmJb5H4thDggw
        HfM/FsMcEGA65n8shjkgwHTM/1gMc0CAaZj/sTjmgADbM/9jccwBAbZn/sfimAMCbMf8j8UyBwTYnPkf
        i2UOCLA58z8WyxwQYHPmfyyWOSDAZsz/WDxzQIDDM/9j8cwBAQ7P/I/FMwcEOBzzP3aGOSDAwZn/sTPM
        AQEOzvyPnWEOCHBw5n/sDHNAgIMx/2PnmAMC7M/8j51jDgiwP/M/do45IMA3VuZ/16faeaxF5n/MxhwQ
        YG/mf+wsc0CAvZn/sbPMAQH2Zv7HzjIHBKgz/2PnmQMC3JL5HzvPHBDglsz/2HnmgABfz/yP1TAHBDjK
        /I/VMAcEOKrn/O/3EjRjDghwVM/fij4yQTPmgABfY/7H6pgDApj/sULmgADmf6yQOSCwduZ/rJY5ILBm
        5n+sljkgsGbmf6yWOSCwZuZ/rJY5ILBW5n+snjkgsEbmf6yeOSCwRuZ/rJ45ILA25n9wI3NAYE3M/+BG
        5oDAmpj/wY3MAYE1Mf+DG5kDAmth/gfHMAcE1sD8D45hDgisgfkfHMMcENh15n+wB3NAYJeZ/8EezAGB
        XWb+B3swBwR2mfkf7MEcENhV5n+wD3NAYBeZ/8E+zAGBXWT+B/swBwR2jfkfHJA5ILBLzP/ggMwBgV1i
        /gcHZA4I7BLzPzggc0BgV5j/wSGZAwK7wPwPDskcENgF5n9wSOaAwNKZ/8GGzAGBJTP/gw2ZAwJLZv4H
        GzIHBJbM/A82ZA4ILJX5H2zJHBBYonNS7bzSIvM/doI5ILBE70i180qLzP/YCeaAwNKY/8FEzAGBJTH/
        g4mYAwJLYv4HEzEHBJbE/A8mYg4ILIX5H0zMHBBYAvM/mJg5ILAE5n8wMXNAYHTmfzATc0BgZOZ/MBNz
        QGBk5n8wE3NAYGTmfzATc0BgVOZ/MDNzQGBE5n8wM3NAYETmfzAzc0BgNOZ/0Ig5IDAS8z9oxBwQGIn5
        HzRiDgiMxPwPGjEHBEZh/geNmQMCIzD/g8bMAYERmP9BY+aAQG/mf9CJOSDQk/kfdGIOCPRk/gedmAMC
        PZn/QSfmgEAv5n/QmTkg0IP5H3RmDgj0YP4HnZkDAq2Z/8EgzAGBlsz/YBDmgEBL5n8wCHNAoCXzPxiE
        OSDQivkfDMYcEGjB/A8GYw4ItGD+B4MxBwTmZv4HgzIHBOZk/geDMgcE5mT+B4MyBwTmZP4HgzIHBOZi
        /geD6zkHlKQ5Mv+DA+g5B5SkOTL/gwPoOQeUpDky/4MD6vlBHUmaMh8whkPoOQeUpCkz/4ND6DkHlKQp
        M/+DQ+g9B5SkKTL/gw2YA0paeuZ/sAFzQElLz/wPNmAOKGnpmf/BhswBJS018z/YgjmgpKVm/gdbMAeU
        tNTM/2AL90i1J5Ykjdx1yfwPtnBuqj25JGnkzP9gC3dM16Tak0uSRs78D7bgp39JS838Dzbkp39JS838
        D7bgp39JS838Dzbkp39JS+7HE7ABP/1LWmqXpxMScEh++pe05J6dgA346V/SUis//Z+agEPy07+kpXZD
        KpcuBzbgp39JS+2lCdjAbdPnU+2JJUkj92fp+ARs4JxUe2JJ0shdmLz4w4ZOSh9PtSeXJI1Yudqf2/3C
        ltzzX9JSKi/85TeWpydgS29OtSeaJPXsi+mj6aJUPuT3E+lWCZjAndOXU+3J16qr0x0SANDIk1LtRbll
        L0kAQENvSbUX5Vb56R8AGjs5XZtqL8yt8tM/ADT2w6n2otwqP/0DQAflrlm1F+ZW+ekfADp4U6q9MLfI
        T/8A0MmHUu3FuUV++geADso9s7+aai/Oc1cu7lFuPQwANHafVHtxbtEfJgCgg59MtRfnFj00AQAd/GKq
        vTjP3TXpxAQAdHB2qr1Az93bEwDQyXNT7QV67v4oAQCdnJtqL9Bzd34CADopO/zaC/Tc+QYAADrq9RbA
        axMA0EmvDwG+LQEAnfxCqr1Az50ZIAB01PNCQA9JAEAHPS8F/JoEAHRwSup1M6D/Sd+SAIAOet4O+MIE
        AHTwxlR7cW7Rl9ODEwDQ2LNS7cW5VR9O3goAgMZ+JNVemFv2T+k2CQBo5OT0xVR7YW7Zv6czEgDQyFtS
        7UW5dZ9Lv5wAgAZ+NdVekHt1cfqJdFwCAGZyp1Q+kV97Me7ZZelV6YnpnukOyTcFADChv0u1F2FJ6tn1
        6cr0nlRuJV4uI35CAiZSfsquPfkkabTKNwTPSOVDzMCWyt35PpZqTzZJGrHyNuHjErCl56bak0ySRu2G
        9JLk80Gwhdunz6fak0ySRu7P0/EJ2NCLU+3JJUmjV85fwIZulz6Vak8uSRq58naAzwTAFka7MJAkHbTy
        YeZTErCBsrF9X6o9uSRp9J6WgA09II14dUBJ2q8rkg8EwhbOS7UnlySN3g8mYEPl4kCXpNqTS5JG7mUJ
        2MK3p8+k2hNMkkbtnQnY0sPTV1LtSSZJI/aJBEzgrFR7kknSiH0pARO5INWeaJI0Wr4BgAmVm238Xqo9
        2SRppLwFABMr29rfT7UnnCSN0sUJmME5qfakk6QRemkCZvKk9L+p9uSTpJ49OAEzekj6ZKo9ASWpR+X9
        f5cChgbulN6Sak9ESWrdUxPQSFkIPDl9IdWekJLUoo+kb0pAY+XSwX+Tak9MSZqzG9KjE9DRj6V/TbUn
        qSTN0QsTMIDyIZyfTu9NtSerJE3Vn6byViQwmB9Nb0zXp9qTV5I2qfzav/zk78UfBnfndHZ6T/pqqj2h
        JekglQ/8ec8fFuhb0y+lP04fTrUnuCQdW9n5lx8kfNofdsRd0o+np6Ryv4GyJvjndFn6bDIxlNbXtemK
        9M70slSu8OciP0BzJ6b7piek56Ty24tL0gdS+S1G+UblyzdW/nX598p/Vv475b/77PT4VP4Z5Z8FNzkp
        3fzY+pNUO7bK52gcWwAzOyE9IJ2VXp8+n2o/pWzSF9NbU/kAU5lNOmmvy7HH1tWpdpxs0k3HVrlpV7lc
        t2ML4IDunX4ztbzPwWfSq1M5YbO7bjq2rky142COHFsA38Dp6WnpP1PtJNqy/0jlQ07la2L5bpOenkY4
        tsrbBuXYOi0BrFo5OZdflZafkmonzJ6VXwuXnxbvkFgexxbAgG6dzk3/k2onyJG6Jr0knZoYXzm2zktL
        OLbKNwIvTo4tYBUemcpFRGonxJH7WPr5xLjKsfXRVPv7GznHFrDTyt0K35JqJ8AlVa6RcEZiHHdPf5tq
        f19LyrEF7Jzyk9mI78Vu2qfTwxP9ObYABnSrVLb2u3jvgXIjlAtTuYgM7a3h2HINAWCR7pjenWonuF3q
        4nT7RDvl2CpX4av9fexSFyXHFrAod03vT7WT2i5WNubeu23DsQUwqDPTpal2MtvlPp7uk5hPObbKDapq
        j/8uV5YN90wAw7pX+lSqncTWUPn/7kQ9j3JslQ/I1R73NXRVcmwBQ/q2tMQN9tRdnsrkkencLa3xt0rH
        5tgChlM+lPVfqXbSWmPlfVuXeZ2GY+vrK/eqcGwBQyhTpTV82v+wlXWAGdd2ysRyDZ/2P2xlHVBmkABd
        vTLVTlI6cuRlic29KtUeV33tZkIA3ZQrlpWLltROUPraY/OoxOE5tr5xji2gm/JhpF26BOtclWVA+RAb
        B1eu7f/ZVHs8dbRybJUP3wI09eZUOynplr0xcXC7cNOoVv11Amjmsal2MtLelZvWsL/Hpdrjp717RAKY
        3alpiffz713Zsd86sTfH1maV6284toDZnZtqJyHtX7l7HXs7L9UeN+3fCxLAbMoFSK5JtROQ9u/q5O5u
        dY6t7SrH1u0SwCxelGonHx285yZu6cWp9njp4D0nAUzu9GSatX3lhjblseSo2yTH1vaVY+u0BDCpp6Xa
        SUeH7ymJo56eao+TDt9ZCWBSH0i1E44OX7mhC0c5tqbrfQlgMg9MtZONNu9+iSNHHpRqj482774JYBIX
        ptqJpmdfSe9IT00/kO6Uyh3SSuVfl3+vvG1R7spX/ru1f0bPXpE4cuS3U+3x6dmxx9a3pCUdWxckgK2d
        kK5KtRNNj76UXprKSfmgykn75enaVPtn9uiKdHxas1GPrW9OBzXisfWJtPZjC5jASL+ifX3a5sY6Z6Q3
        pNo/u0ffl9ZspGPrL9M2N9YZ7di6fwLYyrNS7QTTsnLr03IVvePStso/45z01VT7s1p2dlozx9Z8lbcv
        ALbyD6l2gmlVOZk+MU3tZ1Pv+82Xu96tmWNrvsrdOgE2dlL6QqqdYFr162kuz0u1P7NV5dK35YNla7Tr
        x9bzU+3PbFW5NPBajy1gAmVOVDu5tKq85z/Fr2b3Uv7Zf5Vqf3ar7pXWaA3HVrlXf+3PbtWZCWAjT0i1
        E0uLyieyywer5lY+VFj+rNrX0KLHpDVaw7F199RzHfDoBLCRcuOa2omlReXWsK2cn2pfQ4vKh8bWaC3H
        Vtnk176GFj0zAWzkj1PtxDJ35eIqh9n5b+tbU69Pbr8urdFajq27pF7H1msTwEbelWonlrm7KLW2pv+v
        I1jT4/3uVPta5q5czRBgI+WmNbUTy9z1uFveM1Lta5m7f0trtKZjq/wqvva1zN17E8BGLk21E8vcfX9q
        7YdS7WuZuw+lNVrTsfWQVPta5u6DCWAjn0m1E8vcHeZa7FMpnwOofS1zV66Fv0ZrOrbK5wBqX8vcXZkA
        NnJ9qp1Y5u7E1NrJqfa1zF2Zia3Rmo6tU1Lta5m7MncE2IhvAObPNwBt8w0AwAH0+jVty5nWTbwF0Naa
        ji1vAQCL0+uDWj+QWuv1QS0fAmxbj2Proan2tcydDwECG+s11Xpaaq3XrWnNANvW49gqNx2qfS1zZwYI
        bKzXxVouTq1dkmpfy9yt9WItazq23pNqX8vcvT0BbKTn5VrvlFrpeblWlwJuW+tj667JpYCBxXlOqp1Y
        WvSy1MorU+1raNFab9iylmPrVan2NbSoXN0SYCOPT7UTS4vKPO7b09zuka5Lta+hRWu9Zatja/4elQA2
        cp9UO7G06g3puDSX8s9+U6r92a06M63RGo6tv0m1P7tV90wAGzkpfSHVTi6tKveNn8sLU+3PbNXV6VZp
        jRxb87bmYwuYyN+n2gmmVeUDVD+TpvZz6YZU+zNb9ea0Zo6t+Sq/fQDYyjmpdoJpWTmZ/mY6Pm2r/Gq2
        /H/q9cnsm/fUtGYjHVtTvB0w0rHV47bHwI55YKqdYHr0V+nuaVPfkXq/L3vz7pfWbLRja5sPBo52bN03
        AWzlhFSuKV47yfSofIL7/FSu3X9QZedfpn49P5F9bB9PU/xGY8kcW/NUjq05P+AIrMhvpdqJpmfl16zv
        TmXr/EPpzqnc0a9UTuDl2v7l17HlCn8j/Er22MoLDeMeW+VKhUs9tl6eACbxgFQ70Wjz/Ir2axxb0+fY
        Aib1/lQ72ejwvS9x1AdS7XHS4VvrzaWAGZ2daiccHb6zEkeVO/TVHicdvicngEndOn0q1U46OnifTqcl
        jiqPh2Nr+xxbwGxekGonHh28chMcbqn3lfN2oWcngFncNn0+1U4+2r/y2N0ucUt3SNek2uOm/XNsAbN7
        caqdgLR/z0/s7SWp9rhp/56XAGZ1Svpwqp2EtHcfTGVHzt5OTY6tw+fYApop97CvnYi0dw9P7O8xqfb4
        ae8cW0BTI133fPTKdeY5uHKXxNrjqFv2hgTQ1BmpzI5qJyUd7ar0bYmDK8fWZ1Lt8dTRyrF11wTQ3E+l
        3vc9H7ny2DwycXiOrW9cuQfBTyaAbsqNR2onKB05cm5ic+WGSbXHVUeO/EYC6OrEdHGqnaTW3NvTrRKb
        K8fWO1Pt8V1zb0uOLWAI5QJB5QY3tZPVGis3t7l9YnuOra/PsQUMp3wY6SOpdtJaU5en8iE2plM+RPnR
        VHu819RlybEFDOmeac03dSmfyv6exPTOTGs+tq5M350AhlW+Cbg01U5iu1z5CdWL/7wcWwCDu0ta0/u2
        /5HulphfObb+PdX+HnYxxxawOOXubmtYB5RP+7sLW1vl2FrDOqB82t+xBSxSmSqV+7yXi5bUTnBLrlyk
        5sJUpmq059gCWIAfS59MtZPdEisfRitXqqO/XTy2HpYAdkZ5H/ONqXbSW1Llxj6u7T+Wcmy9KdX+vpZU
        ObZc2x/YWY9IS7zn+4eS266ObcnHlt8oAatwSirv316daifEkfpcen46OTG+U9OL0lKOreclxxawOqen
        s9IVqXaC7Fl5L7Z8k+Kyq8u0hGPLJ/yB1TstPSW9P9VOmC0r1y8oLxy3TizfaMfWk5NjC6DifukVqeVP
        bh9PF6T7JnbX/dMrU+tjq9zW2LEFcAjfmX45vT6V90trJ9hN+kJ6azonPSAdn1gXxxbAQpQLv9wrPTaV
        k+vrUrnS4HtT+RT1p9N1N1beYy3/XvnPLkqvTeV/U/635aYy7qXOzd382HpWuunY+rd082Pr2uTYAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2
        d+TI/wPFasAosYb+QwAAAABJRU5ErkJggg==
</value>
  </data>
</root>