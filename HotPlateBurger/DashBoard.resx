<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        083yyLKmq00AVzVdbbpZHlnWCtUugKtZodp1szyytOlqE8DVTFeb7pJHljZdbQK4mulq013yyNJWqHYB
        XMUK1a675JHlTVebAK5iutp0tzyyvOlqE8BVTFeb7pZHljddbQK4iulq093yyPJWqHYB7G6Fatfd8sgp
        TFebAHY3XW16SB45helqE8DupqtND8kjp7BCtQtgVytUux6SR05jutoEsKvpatPD8shpTFebAHY1XW16
        WB45jelqE8CupqtND8sjp7FCtQtgNytUux6WR05lutoEsJvpatNT8sipTFebAHYzXW16Sh45lRWqXQC7
        WKHa9ZQ8cjrT1SaAXUxXm56WR05nutoEsIvpatPT8sjpTFebAHYxXW16Wh45nRWqXQBnt0K162l55JSm
        q00AZzddbTpEHjml6WoTwNlNV5sOkUdOaYVqF8BZrVDtOkQeOa3pahPAWU1Xmw6TR05rutoEcFbT1abD
        5JHTmq42AZzVdLXpMHnktFaodgGczQrVrsPkkVObrjYBnM10telQeeTUpqtNAGczXW06VB45tRWqXQBn
        sUK161B55PSmq00AZzFdbTpcHjm96WoTwFlMV5sOl0dOb7raBHAW09Wmw+WR01uh2gWwuhWqXYfLI1uY
        rjYBrG662vQSeWQL09UmgNVNV5teIo9sYYVqF8CqVqh2vUQe2cZ0tQlgVdPVppfJI9uYrjYBrGq62vQy
        eWQb09UmgFVNV5teJo9sY4VqF8BqVqh2vUwe2cp0tQlgNdPVppfKI1uZrjYBrGa62vRSeWQrK1S7AFax
        QrXrpfLIdqarTQCrmK42vVwe2c50tQlgFdPVppfLI9uZrjYBrGK62vRyeWQ7K1S7AKatUO16uTyypelq
        E8C06WrTW+SRLU1XmwCmTVeb3iKPbGmFahfAlBWqXW+RR7Y1XW0CmDJdbXqbPLKt6WoTwJTpatPb5JFt
        TVebAKZMV5veJo9sa4VqF8C7rVDteps8srXpahPAu01Xm94qj2xtutoE8G7T1aa3yiNbW6HaBfAuK1S7
        3iqPbG+62gTwLtPVprfLI9ubrjYBvMt0tent8sj2pqtNAO8yXW16uzyyvRWqXQCvtkK16+3yyCVMV5sA
        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
</value>
  </data>
</root>